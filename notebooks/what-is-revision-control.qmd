---
title: "What is (this thing) called revision control"
editor: source
---

```{r, echo = FALSE}
source("./R/init.R")
log_info("Called what-is-revision-control notebook")
```

## The big picture {#sec-what-is-big-pic}

First, let's briefly introduce some minimal terminology and context.

::: callout-note
TODO - Timelines
:::

A **repository** is the mechanism that is used to implement version control by git.

::: callout-note
The repository is implemented by a hidden directory called `.git` that exists within the project directory and contains all the data on the changes that have been made to the files in the project.
You should never touch this directory nor its contents.
:::

There are two types of repositories, *local* and *remote*.
![Big picture](../fig/git-big-pic.jpg)
The local repositories reside on your machine.
Remote repositories are hosted by service providers, the most common being GitHub, GitLab and Bitbucket.
We only deal with GitHub here.
GitHub comes in a few varieties: 

- GitHub Enterprise is hosted by the company called GitHub, see [github.com](https://github.com/). It is a commercial platform, but parts of it are made freely available.
- GitHub Enterprise Server is self-hosted; this is what USyd provides via [https://github.sydney.edu.au/](https://github.sydney.edu.au/)

In a nutshell, git provides a set of commands that allow you to manage the files that are retained in these local and remote repositories.

Again, I cannot sum it up better than Jenny, so please take the time to read it.

[Excuse Me, Do You Have a Moment to Talk About Version Control?](https://www.tandfonline.com/doi/full/10.1080/00031305.2017.1399928?needAccess=true)



## Why commandline

Because it is the best way.



